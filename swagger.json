{
    "swagger": "2.0",
    "info": {
        "description": "HackPortal Backend API serice",
        "title": "Hack Hack Backend API",
        "termsOfService": "https://seaffood.com/api",
        "contact": {
            "name": "murasame",
            "url": "https://twitter.com/fresh_salmon256",
            "email": "oogiriminister@gmail.com"
        },
        "license": {
            "name": "No-license",
            "url": "No-license"
        },
        "version": "1.0"
    },
    "host": "https://seaffood.com",
    "basePath": "/api/v1",
    "paths": {
        "/accounts": {
            "post": {
                "description": "Create an account from the requested body",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create new account",
                "parameters": [
                    {
                        "description": "Create Account Request Body",
                        "name": "CreateAccountRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateAccountRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create succsss response",
                        "schema": {
                            "$ref": "#/definitions/api.CreateAccountResponses"
                        }
                    },
                    "400": {
                        "description": "bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/:from_user_id/follow": {
            "post": {
                "description": "Follow!!!!!!!!",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Create Follow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Accounts API wildcard",
                        "name": "from_user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "create Follow Request Body",
                        "name": "CreateFollowRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateFollowRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "succsss response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Follows"
                            }
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Unfollow",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Remove follow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Accounts API wildcard",
                        "name": "from_user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "to_user_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/:id/rate": {
            "get": {
                "description": "List Rate for User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rate"
                ],
                "summary": "List Rate",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "page_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.RateResponses"
                            }
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Rate for User",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rate"
                ],
                "summary": "Create Rate",
                "parameters": [
                    {
                        "description": "Create Rate Request Body",
                        "name": "CreateRateRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateRateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.RateResponses"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/accounts/:user_id": {
            "get": {
                "description": "Return a user from the id specified in the path",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Accounts API wildcard",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get success response",
                        "schema": {
                            "$ref": "#/definitions/api.GetAccountResponses"
                        }
                    },
                    "400": {
                        "description": "bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user info from requested body",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Update Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Accounts API wildcard",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Account Request Body",
                        "name": "UpdateAccountRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateAccountRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update success response",
                        "schema": {
                            "$ref": "#/definitions/api.UpdateAccountResponse"
                        }
                    },
                    "400": {
                        "description": "bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Only you can delete your account (logical delete)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Remove Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Accounts API wildcard",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success response",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookmarks": {
            "post": {
                "description": "Create a bookmark from the specified hackathon ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "Create new bookmark",
                "parameters": [
                    {
                        "description": "Create Bookmark Request Body",
                        "name": "CreateBookmarkRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateBookmarkRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create success response",
                        "schema": {
                            "$ref": "#/definitions/api.BookmarkResponse"
                        }
                    },
                    "400": {
                        "description": "bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookmarks/:hackathon_id": {
            "get": {
                "description": "Get my bookmarks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "Get bookmarks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Bookmark Request Body",
                        "name": "ListBookmarkRequestQueries",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.BookmarkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the bookmark of the specified hackathon ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookmark"
                ],
                "summary": "Delete bookmark",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Bookmark Request Body",
                        "name": "hackathon_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete success response",
                        "schema": {
                            "$ref": "#/definitions/api.BookmarkResponse"
                        }
                    },
                    "400": {
                        "description": "bad request response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "server error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/frameworks": {
            "get": {
                "description": "Get Frameworks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Frameworks"
                ],
                "summary": "Get Frameworks",
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Frameworks"
                            }
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hackathons": {
            "get": {
                "description": "List Hackathon",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hackathon"
                ],
                "summary": "List Hackathon",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "page size",
                        "name": "expired",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "page_size",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page id",
                        "name": "page_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.HackathonResponses"
                            }
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Register a hackathon from given parameters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hackathon"
                ],
                "summary": "Create Hackathon",
                "parameters": [
                    {
                        "description": "create hackathon Request Body",
                        "name": "CreateHackathonRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateHackathonRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.HackathonResponses"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hackathons/:hackathon_id": {
            "get": {
                "description": "Get Hackathon",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hackathon"
                ],
                "summary": "Get Hackathon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hackathons API wildcard",
                        "name": "hackathon_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.HackathonResponses"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/locates": {
            "get": {
                "description": "Get Frameworks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locates"
                ],
                "summary": "Get Frameworks",
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Locates"
                            }
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "List Account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "List Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rooms API wildcard",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/db.ListRoomTxResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Rooms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Create Rooms",
                "parameters": [
                    {
                        "description": "create Room Request Body",
                        "name": "CreateRoomRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateRoomRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/db.CreateRoomTxResult"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rooms/:room_id": {
            "get": {
                "description": "Get Room",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Get Room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rooms API wildcard",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.GetRoomResponse"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "update Room",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "update Room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rooms API wildcard",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update Room Request body",
                        "name": "UpdateRoomRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateRoomRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.GetRoomResponse"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete Room",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "delete Room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rooms API wildcard",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rooms/:room_id/addchat": {
            "post": {
                "description": "Add Chat Room",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Add Chat Room",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rooms API wildcard",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "add chat Room Request body",
                        "name": "AddChatRequestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddChatRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.GetRoomResponse"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rooms/:room_id/members": {
            "post": {
                "description": "Add Account In Rooms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Add Account In Rooms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rooms API wildcard",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/db.CreateRoomTxResult"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove Account In Rooms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rooms"
                ],
                "summary": "Remove Account In Rooms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Rooms API wildcard",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "$ref": "#/definitions/api.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tech_tags": {
            "get": {
                "description": "Get Frameworks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "TechTags"
                ],
                "summary": "Get Frameworks",
                "responses": {
                    "200": {
                        "description": "success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.TechTags"
                            }
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AddChatRequestBody": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.BookmarkResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expired": {
                    "type": "string"
                },
                "hackathon_id": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "term": {
                    "type": "integer"
                }
            }
        },
        "api.CreateAccountRequestBody": {
            "type": "object",
            "required": [
                "locate_id",
                "show_locate",
                "show_rate",
                "user_id",
                "username"
            ],
            "properties": {
                "explanatory_text": {
                    "type": "string"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "locate_id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "show_locate": {
                    "type": "boolean"
                },
                "show_rate": {
                    "type": "boolean"
                },
                "tech_tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.CreateAccountResponses": {
            "type": "object",
            "properties": {
                "explanatory_text": {
                    "type": "string"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Frameworks"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "locate": {
                    "type": "string"
                },
                "rate": {
                    "type": "integer"
                },
                "show_locate": {
                    "type": "boolean"
                },
                "show_rate": {
                    "type": "boolean"
                },
                "tech_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.TechTags"
                    }
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.CreateBookmarkRequestBody": {
            "type": "object",
            "properties": {
                "hackathon_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "api.CreateFollowRequestBody": {
            "type": "object",
            "required": [
                "to_user_id"
            ],
            "properties": {
                "to_user_id": {
                    "type": "string"
                }
            }
        },
        "api.CreateHackathonRequestBody": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expired": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status_tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "term": {
                    "type": "integer"
                }
            }
        },
        "api.CreateRateRequestBody": {
            "type": "object",
            "properties": {
                "rate": {
                    "type": "integer"
                }
            }
        },
        "api.CreateRoomRequestBody": {
            "type": "object",
            "required": [
                "description",
                "hackathon_id",
                "member_limit",
                "title",
                "user_id"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "hackathon_id": {
                    "type": "integer"
                },
                "member_limit": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "api.DeleteResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "api.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.GetAccountResponses": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "explanatory_text": {
                    "type": "string"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Frameworks"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "locate": {
                    "type": "string"
                },
                "rate": {
                    "type": "integer"
                },
                "show_locate": {
                    "type": "boolean"
                },
                "show_rate": {
                    "type": "boolean"
                },
                "tech_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.TechTags"
                    }
                },
                "user_id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.GetRoomResponse": {
            "type": "object",
            "properties": {
                "create_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hackathon": {
                    "$ref": "#/definitions/api.hackathonInfo"
                },
                "is_status": {
                    "type": "boolean"
                },
                "member_limit": {
                    "type": "integer"
                },
                "members_frameworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.RoomFramework"
                    }
                },
                "members_tech_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.RoomTechTags"
                    }
                },
                "now_member": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.NowRoomAccounts"
                    }
                },
                "room_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.HackathonResponses": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expired": {
                    "type": "string"
                },
                "hackathon_id": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "status_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.StatusTags"
                    }
                },
                "term": {
                    "type": "integer"
                }
            }
        },
        "api.RateResponses": {
            "type": "object",
            "properties": {
                "create_at": {
                    "type": "string"
                },
                "rate": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "api.UpdateAccountRequestBody": {
            "type": "object",
            "properties": {
                "explanatory_text": {
                    "type": "string"
                },
                "hashed_password": {
                    "type": "string"
                },
                "locate_id": {
                    "type": "integer"
                },
                "rate": {
                    "type": "integer"
                },
                "show_locate": {
                    "type": "boolean"
                },
                "show_rate": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.UpdateAccountResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "explanatory_text": {
                    "type": "string"
                },
                "hashed_password": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "locate": {
                    "type": "string"
                },
                "rate": {
                    "type": "integer"
                },
                "show_locate": {
                    "type": "boolean"
                },
                "show_rate": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.UpdateRoomRequestBody": {
            "type": "object",
            "required": [
                "description",
                "member_limit",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "member_limit": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "api.hackathonInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "expired": {
                    "type": "string"
                },
                "hackathon_id": {
                    "type": "integer"
                },
                "icon": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.StatusTags"
                    }
                },
                "term": {
                    "type": "integer"
                }
            }
        },
        "db.CreateRoomTxResult": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.NowRoomAccounts"
                    }
                },
                "create_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "frameworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.RoomFramework"
                    }
                },
                "hackathon": {
                    "$ref": "#/definitions/db.RoomHackathonData"
                },
                "hackathon_id": {
                    "type": "integer"
                },
                "is_delete": {
                    "type": "boolean"
                },
                "member_limit": {
                    "type": "integer"
                },
                "room_id": {
                    "type": "string"
                },
                "techtags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.RoomTechTags"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.Follows": {
            "type": "object",
            "properties": {
                "create_at": {
                    "type": "string"
                },
                "from_user_id": {
                    "type": "string"
                },
                "to_user_id": {
                    "type": "string"
                }
            }
        },
        "db.Frameworks": {
            "type": "object",
            "properties": {
                "framework": {
                    "type": "string"
                },
                "framework_id": {
                    "type": "integer"
                },
                "tech_tag_id": {
                    "type": "integer"
                }
            }
        },
        "db.ListRoomTxHackathonInfo": {
            "type": "object",
            "properties": {
                "hackathon_id": {
                    "type": "integer"
                },
                "hackathon_name": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                }
            }
        },
        "db.ListRoomTxResult": {
            "type": "object",
            "properties": {
                "hackathon": {
                    "$ref": "#/definitions/db.ListRoomTxHackathonInfo"
                },
                "members_frameworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.RoomFramework"
                    }
                },
                "members_tech_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.RoomTechTags"
                    }
                },
                "now_member": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.NowRoomAccounts"
                    }
                },
                "rooms": {
                    "$ref": "#/definitions/db.ListRoomTxRoomInfo"
                }
            }
        },
        "db.ListRoomTxRoomInfo": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "member_limit": {
                    "type": "integer"
                },
                "room_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "db.Locates": {
            "type": "object",
            "properties": {
                "locate_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.NowRoomAccounts": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "db.RoomFramework": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "framework": {
                    "$ref": "#/definitions/db.Frameworks"
                }
            }
        },
        "db.RoomHackathonData": {
            "type": "object",
            "properties": {
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "db.RoomTechTags": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "tech_tag": {
                    "$ref": "#/definitions/db.TechTags"
                }
            }
        },
        "db.StatusTags": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "status_id": {
                    "type": "integer"
                }
            }
        },
        "db.TechTags": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "tech_tag_id": {
                    "type": "integer"
                }
            }
        }
    }
}
